plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.google.protobuf' version '0.8.10'
    id 'idea'
    id 'jacoco'
}

group 'org.g1.test'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

def grpcVersion ='1.28.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.11.0'
def protocVersion = protobufVersion


repositories {
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.28.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'io.grpc:grpc-netty-shaded:1.28.0'
    implementation 'io.grpc:grpc-protobuf:1.28.0'
    implementation 'io.grpc:grpc-stub:1.28.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.2.5.RELEASE'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core',version:'2.10.3'
    compile group: 'com.fasterxml.jackson.datatype', name:'jackson-datatype-jsr310', version: '2.3.0-rc1'
    compileOnly'org.projectlombok:lombok:1.18.12'
    compile 'com.google.protobuf:protobuf-java:3.10.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core',version:'2.10.3'
    compile group: 'com.fasterxml.jackson.datatype', name:'jackson-datatype-jsr310', version: '2.3.0-rc1'
    compile'org.springframework.boot:spring-boot-starter-web'
    implementation'org.springframework.boot:spring-boot-starter-test'
    compileOnly'org.projectlombok:lombok:1.18.12'
    compile 'com.google.protobuf:protobuf-java:3.10.0'
    compile 'net.devh:grpc-spring-boot-starter:2.7.0.RELEASE'
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile 'net.devh:grpc-server-spring-boot-starter:2.7.0.RELEASE'
    compile group:'com.google.api.grpc',name: 'proto-google-common-protos', version:'1.5.0'
    compile group: 'org.projectlombok', name:'lombok', version: '1.16.20'

    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.2'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    runtimeOnly 'com.h2database:h2'
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly"io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation"io.grpc:grpc-testing:${grpcVersion}"
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testCompile "org.mockito:mockito-core:2.+"
    testCompile('org.mockito:mockito-junit-jupiter:2.18.3')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    runtimeOnly 'com.h2database:h2'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.4'
    compile group: 'io.grpc', name: 'grpc-all', version: '1.28.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

jacocoTestReport{
    reports{
        html.enabled=true
        xml.enabled=true
        csv.enabled=true
    }
}
// if you have source imports issues, add the below
sourceSets.main.java.srcDir new File(buildDir, 'generated/source')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/source')
    }
}